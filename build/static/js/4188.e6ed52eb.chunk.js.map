{"version":3,"file":"static/js/4188.e6ed52eb.chunk.js","mappings":"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","sources":["views/Orders/orders/Pending.js","views/ReactTable/ReactTable.js"],"sourcesContent":["import { CCard } from \"@coreui/react\";\nimport moment from \"moment\";\nimport React, { useMemo } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllOrders, setCurrentManageOrderPage } from \"src/features/Orders/OrderSlice\";\nimport ReactTable from \"src/views/ReactTable/ReactTable\";\nimport { BiRupee } from \"react-icons/bi\";\nconst Pending = () => {\n  const pending = useSelector((store) => store.orders);\n  const { searchInput, startDate, endDate } = useSelector(\n    (state) => state.orders\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(\n      getAllOrders({ status: \"pending\", searchInput, startDate, endDate })\n    );\n    dispatch(setCurrentManageOrderPage(\"pending\"))\n  }, [dispatch, searchInput, startDate, endDate]);\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Order Number\",\n        accessor: \"orderNumber\",\n      },\n      {\n        Header: \"Date\",\n        accessor: (d) => {\n          return moment(d.createdAt).local().format(\"DD-MM-YYYY\");\n        },\n      },\n      {\n        Header: \"Vendor Name\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.merchantName === null ? \"--\" : <span>{d.merchantName}</span>}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Customer Name\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.user.first_name === null ? (\n                \"--\"\n              ) : (\n                <span>\n                  {d.user.first_name} {d.user.last_name}\n                </span>\n              )}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Product Name\",\n        accessor: \"productName\",\n      },\n      {\n        Header: \"Size\",\n        accessor: \"boxType\",\n      },\n      {\n        Header: \"Amount\",\n        accessor: (d) => {\n          return (\n            <span>\n              <BiRupee />\n              {d.price.toLocaleString(\"en-US\")}\n            </span>\n          );\n        },\n      },\n    ],\n    []\n  );\n  return (\n    <CCard className=\"mt-2\">\n      {pending?.Allorders && (\n        <ReactTable data={pending?.Allorders?.data || []} columns={columns} />\n      )}\n    </CCard>\n  );\n};\n\nexport default Pending;\n","import React, { useEffect } from \"react\";\nimport {\n  useSortBy,\n  useTable,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { BsArrowDown, BsArrowUp } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\n\nconst ReactTable = ({ data, columns }) => {\n  const {searchField} = useSelector((state)=>state.users)\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      autoResetPage: false,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    pageCount,\n    state: { pageIndex, pageSize },\n  } = tableInstance;\n\n  useEffect(()=>{\n    gotoPage(0)\n  },[searchField])\n\n  useEffect(()=>{\n    if(data?.length % 10 ===0){\n      previousPage()\n    }\n  },[data])\n\n  useEffect(() => {\n    window.scrollTo({top: 0, left: 0, behavior: 'instant'});\n  }, [pageIndex]);\n  \n  return (\n    <>\n      <div>\n        <table {...getTableProps()} className=\"category-table\">\n          <thead className=\"category-table-head\">\n            {headerGroups.map((headerGroups, index) => (\n              <tr {...headerGroups.getHeaderGroupProps()} key={index}>\n                {headerGroups.headers.map((columns,index) => (\n                  <th key={index}>\n                    {columns.render(\"Header\")}\n                    <span {...columns.getHeaderProps(columns.getSortByToggleProps())}>\n                    {!columns.disableSortBy &&\n                      (columns.isSorted ? (\n                        columns.isSortedDesc ? (\n                          <>\n                          <BsArrowDown className=\"arrow-down\" />\n                          <BsArrowUp />\n                          </>\n                        ) : (\n                          <>\n                          <BsArrowDown />\n                          <BsArrowUp className=\"arrow-down\" />\n                          </>\n                        )\n                      ) : (\n                        <>\n                          <BsArrowUp />\n                          <BsArrowDown />\n                        </>\n                      ))}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"category-table-body\">\n            {data.length !== 0 ? (\n              page.map((row,index) => {\n                prepareRow(row);\n                return (\n                  <tr className=\"th-table\" {...row.getRowProps()} key={index}>\n                    {row.cells.map((cell, index) => {\n                      return (\n                        <th className=\"th-table-data\" {...cell.getCellProps()} key={index}>{cell.render(\"Cell\")}</th>\n                      );\n                    })}\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan={columns.length}> No record found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {data?.length > 10 ? (\n        <div className=\"pagination-button\">\n          <button onClick={() => gotoPage(0)} disabled={pageIndex === 0}>\n          {'<<'}\n        </button>{' '}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n           {'<'}\n          </button>\n          <strong className=\"me-2\">\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{\" \"}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </button>\n          <button\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={pageIndex === pageCount - 1}\n        >\n          {'>>'}\n        </button>{' '}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default ReactTable;\n"],"names":["pending","useSelector","store","orders","state","searchInput","startDate","endDate","dispatch","useDispatch","useEffect","getAllOrders","status","setCurrentManageOrderPage","columns","useMemo","Header","accessor","d","moment","createdAt","local","format","merchantName","user","first_name","last_name","price","toLocaleString","className","Allorders","data","users","searchField","tableInstance","useTable","autoResetPage","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","pageCount","length","window","scrollTo","top","left","behavior","map","index","getHeaderGroupProps","key","headers","render","getHeaderProps","getSortByToggleProps","disableSortBy","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","colSpan","onClick","disabled"],"sourceRoot":""}