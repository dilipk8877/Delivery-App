{"version":3,"file":"static/js/5944.508f5291.chunk.js","mappings":"6RAkDA,EAtC0B,WACxB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAjB,IAAxCC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,SAMlBC,EAAa,WACjBP,GAASQ,EAAAA,EAAAA,OACTR,GAASS,EAAAA,EAAAA,IAAY,MACtB,EACD,OACE,UAAC,KAAD,CAAQC,UAAU,SAASC,QAASN,EAApC,WACE,UAAC,KAAD,CAASO,UAAU,cAAnB,WACE,SAAC,KAAD,KACA,SAAC,MAAD,CAASA,UAAU,+BAA+BC,QAASN,QAE7D,SAAC,KAAD,CAAYK,UAAU,2DAAtB,wDAGA,UAAC,KAAD,YACE,SAAC,KAAD,CAASE,MAAM,YAAYD,QAASN,EAApC,iBAGA,SAAC,KAAD,CACEO,MAAM,OACNF,UAAU,aACVG,KAAK,SACLF,QAzBc,WACpBb,GAASgB,EAAAA,EAAAA,IAAcV,IACvBN,GAASQ,EAAAA,EAAAA,MACV,EAkBK,sBAWP,E,WCkFD,EA7GgB,WACd,IAAMJ,GAAUF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQa,WAAzB,IACpBC,GAAahB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAjB,IAAzBc,SACFlB,GAAWC,EAAAA,EAAAA,OAEjBkB,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,MACV,GAAE,CAACpB,IAEJ,IAAMqB,GAAWC,EAAAA,EAAAA,MAeXC,GAAUC,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACEC,OAAQ,OACRC,SAAU,SAACC,GACT,OACE,4BACGA,EAAEC,KAAKC,WADV,IACuBF,EAAEC,KAAKE,YAGjC,GAEH,CACEL,OAAQ,QACRC,SAAU,cAEZ,CACED,OAAQ,QACRC,SAAU,eAEZ,CACED,OAAQ,SAERC,SAAS,SAAAC,GAAI,IAAD,IACV,OACE,2BAAO,UAAAA,EAAEI,cAAF,eAAUC,OAAO,GAAGC,gBAApB,UAAoCN,EAAEI,cAAtC,aAAoC,EAAUG,MAAM,KAE9D,GAEH,CACET,OAAQ,SACRU,eAAe,EACfT,SAAU,SAACC,GACT,OACE,UAAC,KAAD,CAAWf,UAAU,6DAArB,WACE,SAAC,MAAD,CAAQA,UAAU,SAASC,QAAS,kBAzC5Be,EAyC6CD,EAAEC,KAxCjEP,EAAS,2CAAD,OAA4CO,EAAKQ,KACzDpC,GAASqC,EAAAA,EAAAA,OACTrC,GAASsC,EAAAA,EAAAA,YACTtC,GAASuC,EAAAA,EAAAA,OAJQ,IAACX,CAyC4B,EAA0BY,MAAM,oBACpE,SAAC,MAAD,CACE5B,UAAU,cACV4B,MAAM,kBACN3B,QAAS,kBAjDEuB,EAiDoBT,EAAEC,KAAKQ,QAhDlDf,EAAS,yCAAD,OAA0Ce,IAD5B,IAACA,CAiDF,KAEX,SAAC,MAAD,CACExB,UAAU,SACV4B,MAAM,iBACN3B,QAAS,kBA1DDuB,EA0DoBT,EAAEC,KAAKQ,GAzD/CpC,GAASyC,EAAAA,EAAAA,WACTzC,GAASS,EAAAA,EAAAA,IAAY2B,IAFF,IAACA,CA0DC,MAIhB,GA/CL,GAkDA,IAOF,OACE,+BACE,UAAC,KAAD,WACGlB,GAAW,SAACwB,EAAA,EAAD,CAAS9B,UAAU,kBAAqB,MACpD,UAAC,KAAD,YACE,SAAC,KAAD,CAAYA,UAAU,wCAAtB,UACE,UAAC,KAAD,CACEE,MAAM,OACNF,UAAU,0EACVC,QAda,WACvBQ,EAAS,wCACTrB,GAAS2C,EAAAA,EAAAA,OACT3C,GAAS4C,EAAAA,EAAAA,MACV,EAOS,WAKE,SAAC,MAAD,CAAsBhC,UAAU,qBALlC,YASF,SAAC,KAAD,WAEI,SAACiC,EAAA,EAAD,CAAYC,MAAa,OAAP1C,QAAO,IAAPA,OAAA,EAAAA,EAAS2C,aAAc,GAAIxB,QAASA,UAI5D,SAAC,EAAD,QAIP,C,6FCYD,IAlImB,SAAC,GAAuB,IAArBuB,EAAoB,EAApBA,KAAMvB,EAAc,EAAdA,QAC1B,GAAsBrB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAASA,EAAM6C,KAAf,IAA3BC,EAAP,EAAOA,YACDC,GAAgBC,EAAAA,EAAAA,UACpB,CACE5B,QAAAA,EACAuB,KAAAA,EACAM,eAAe,EACfC,aAAc,CAAEC,UAAW,EAAGC,SAAU,KAE1CC,EAAAA,gBACAC,EAAAA,UACAC,EAAAA,eAGAC,EAcET,EAdFS,cACAC,EAaEV,EAbFU,kBACAC,EAYEX,EAZFW,aACAC,EAWEZ,EAXFY,KACAC,EAUEb,EAVFa,WAEAC,GAQEd,EATF/C,MASE+C,EARFc,iBACAC,EAOEf,EAPFe,YACAC,EAMEhB,EANFgB,YACAC,EAKEjB,EALFiB,SACAC,EAIElB,EAJFkB,SACAC,EAGEnB,EAHFmB,aACAC,EAEEpB,EAFFoB,UAbF,EAeIpB,EADF/C,MAASmD,EAdX,EAcWA,UAdX,EAcsBC,SAiBtB,OAdApC,EAAAA,EAAAA,YAAU,WACRgD,EAAS,EACV,GAAC,CAAClB,KAEH9B,EAAAA,EAAAA,YAAU,YACD,OAAJ2B,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,QAAS,KAAM,GACtBF,GAEH,GAAC,CAACvB,KAEH3B,EAAAA,EAAAA,YAAU,WACRqD,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,EAAGC,SAAU,WAC7C,GAAE,CAACtB,KAGF,iCACE,0BACE,qCAAWK,KAAX,IAA4B/C,UAAU,iBAAtC,WACE,kBAAOA,UAAU,sBAAjB,SACGiD,EAAagB,KAAI,SAAChB,EAAciB,GAAf,OAChB,2CAAQjB,EAAakB,uBAArB,IAA4CC,IAAKF,IAC9CjB,EAAaoB,QAAQJ,KAAI,SAACtD,EAAQuD,GAAT,OACxB,0BACGvD,EAAQ2D,OAAO,WAChB,mCAAU3D,EAAQ4D,eAAe5D,EAAQ6D,yBAAzC,cACE7D,EAAQY,gBACPZ,EAAQ8D,SACP9D,EAAQ+D,cACN,iCACA,SAAC,MAAD,CAAa1E,UAAU,gBACvB,SAAC,MAAD,QAGA,iCACA,SAAC,MAAD,KACA,SAAC,MAAD,CAAWA,UAAU,mBAIvB,iCACE,SAAC,MAAD,KACA,SAAC,MAAD,aAnBCkE,EADe,IAFZ,OA+BpB,oCAAWlB,KAAX,IAAgChD,UAAU,sBAA1C,SACmB,IAAhBkC,EAAKyB,OACJT,EAAKe,KAAI,SAACU,EAAIT,GAEZ,OADAf,EAAWwB,IAET,yCAAI3E,UAAU,YAAe2E,EAAIC,eAAjC,IAAgDR,IAAKF,IAClDS,EAAIE,MAAMZ,KAAI,SAACa,EAAMZ,GACpB,OACE,yCAAIlE,UAAU,iBAAoB8E,EAAKC,gBAAvC,IAAuDX,IAAKF,IAAQY,EAAKR,OAAO,QAEnF,IAGN,KAED,yBACE,eAAIU,QAASrE,EAAQgD,OAArB,0CAML,OAAJzB,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,QAAS,IACd,iBAAK3D,UAAU,oBAAf,WACE,mBAAQC,QAAS,kBAAMsD,EAAS,EAAf,EAAmB0B,SAAwB,IAAdvC,EAA9C,SACC,OACO,KACR,mBAAQzC,QAAS,kBAAMwD,GAAN,EAAsBwB,UAAW7B,EAAlD,SACE,OAEF,oBAAQpD,UAAU,OAAlB,UACK0C,EAAY,EADjB,OACwBY,EAAYK,UACxB,KACZ,mBAAQ1D,QAAS,kBAAMuD,GAAN,EAAkByB,UAAW5B,EAA9C,SACG,OAEH,mBACApD,QAAS,kBAAMsD,EAASG,EAAY,EAA3B,EACTuB,SAAUvC,IAAcgB,EAAY,EAFpC,SAIC,OACO,OAGV,KAIP,C","sources":["dispatcherPanel/views/Manager/modal/ConfirmationModel.js","dispatcherPanel/views/Manager/Manager.js","views/ReactTable/ReactTable.js"],"sourcesContent":["import {\n  CButton,\n  CHeader,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ImCross } from \"react-icons/im\";\nimport { closeConfirmMessage, deleteManager, setDeleteId } from \"src/features/manageManager/ManagerSlice\";\nconst ConfirmationModel = () => {\n  const dispatch = useDispatch();\n  const { confirmMessage, deleteId} = useSelector((state) => state.manager);\n\n  const confirmButton = () => {\n    dispatch(deleteManager(deleteId));\n    dispatch(closeConfirmMessage());\n  };\n  const closeModal = () => {\n    dispatch(closeConfirmMessage());\n    dispatch(setDeleteId(null));\n  };\n  return (\n    <CModal alignment=\"center\" visible={confirmMessage}>\n      <CHeader className=\"rounded-top\">\n        <CModalTitle></CModalTitle>\n        <ImCross className=\"text-danger cursor fs-5 me-2\" onClick={closeModal} />\n      </CHeader>\n      <CModalBody className=\"confirmCardText fs-6 w-100 d-flex justify-content-center\">\n        Do you really want to delete this record?\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={closeModal}>\n          No\n        </CButton>\n        <CButton\n          color=\"info\"\n          className=\"text-white\"\n          type=\"submit\"\n          onClick={confirmButton}\n        >\n          Yes\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default ConfirmationModel;\n","import { CButton, CCard, CCardBody, CContainer } from \"@coreui/react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactTable from \"src/views/ReactTable/ReactTable\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  DisabledFieldtrue,\n  getManagerList,\n  openConfirmMessage,\n  setDeleteId,\n  setPreFieldValue,\n  setToggleStausSubmit,\n  setToggleStausUpdate,\n  toggleUpdateButtonFalse,\n  toggleUpdateButtonTrue,\n} from \"src/features/manageManager/ManagerSlice\";\nimport ConfirmationModel from \"./modal/ConfirmationModel\";\nimport Spinner from \"src/spinner/Spinner\";\nconst Manager = () => {\n  const manager = useSelector((state) => state.manager.managerList);\n  const { isLoader } = useSelector((state) => state.manager);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getManagerList());\n  }, [dispatch]);\n\n  const navigate = useNavigate();\n  const handleDelete = (id) => {\n    dispatch(openConfirmMessage());\n    dispatch(setDeleteId(id));\n  };\n  const handleManagerId = (id) => {\n    navigate(`/dispatcher/manageManager/ViewManager/${id}`);\n  };\n\n  const handleEdit = (user) => {\n    navigate(`/dispatcher/manageManager/updateManager/${user.id}`);\n    dispatch(setToggleStausUpdate());\n    dispatch(toggleUpdateButtonFalse());\n    dispatch(DisabledFieldtrue());\n  };\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.user.first_name} {d.user.last_name}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Email\",\n        accessor: \"user.email\",\n      },\n      {\n        Header: \"Phone\",\n        accessor: \"user.mobile\",\n      },\n      {\n        Header: \"Status\",\n        // accessor: \"status\",\n        accessor:d=>{\n          return(\n            <span>{d.status?.charAt(0).toUpperCase() + d.status?.slice(1)}</span>\n          )\n        }\n      },\n      {\n        Header: \"Action\",\n        disableSortBy: true,\n        accessor: (d) => {\n          return (\n            <CCardBody className=\"d-flex justify-content-start align-items-center ps-0 gap-2\">\n              <FaEdit className=\"cursor\" onClick={() => handleEdit(d.user)} title=\"update Manager\" />\n              <MdOutlineRemoveRedEye\n                className=\"cursor fs-6\"\n                title=\"Preview Manager\"\n                onClick={() => handleManagerId(d.user.id)}\n              />\n              <FaTrash\n                className=\"cursor\"\n                title=\"Delete Manager\"\n                onClick={() => handleDelete(d.user.id)}\n              />\n            </CCardBody>\n          );\n        },\n      },\n    ],\n    []\n  );\n  const handleAddManager = () => {\n    navigate(\"/dispatcher/manageManager/addManager\");\n    dispatch(toggleUpdateButtonTrue());\n    dispatch(setToggleStausSubmit());\n  };\n  return (\n    <>\n      <CCard>\n        {isLoader ? <Spinner className=\"modal-spinner\" /> : null}\n        <CCardBody>\n          <CContainer className=\"d-flex justify-content-end gap-3 mb-4\">\n            <CButton\n              color=\"info\"\n              className=\"button-size text-white d-flex justify-content-center align-items-center\"\n              onClick={handleAddManager}\n            >\n              <BsFillPlusCircleFill className=\"me-1 button-icon\" />\n              Add\n            </CButton>\n          </CContainer>\n          <CCard>\n            {true && (\n              <ReactTable data={manager?.sub_admins || []} columns={columns} />\n            )}\n          </CCard>\n        </CCardBody>\n        <ConfirmationModel />\n      </CCard>\n    </>\n  );\n};\n\nexport default Manager;\n","import React, { useEffect } from \"react\";\nimport {\n  useSortBy,\n  useTable,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { BsArrowDown, BsArrowUp } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\n\nconst ReactTable = ({ data, columns }) => {\n  const {searchField} = useSelector((state)=>state.users)\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      autoResetPage: false,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    pageCount,\n    state: { pageIndex, pageSize },\n  } = tableInstance;\n\n  useEffect(()=>{\n    gotoPage(0)\n  },[searchField])\n\n  useEffect(()=>{\n    if(data?.length % 10 ===0){\n      previousPage()\n    }\n  },[data])\n\n  useEffect(() => {\n    window.scrollTo({top: 0, left: 0, behavior: 'instant'});\n  }, [pageIndex]);\n  \n  return (\n    <>\n      <div>\n        <table {...getTableProps()} className=\"category-table\">\n          <thead className=\"category-table-head\">\n            {headerGroups.map((headerGroups, index) => (\n              <tr {...headerGroups.getHeaderGroupProps()} key={index}>\n                {headerGroups.headers.map((columns,index) => (\n                  <th key={index}>\n                    {columns.render(\"Header\")}\n                    <span {...columns.getHeaderProps(columns.getSortByToggleProps())}>\n                    {!columns.disableSortBy &&\n                      (columns.isSorted ? (\n                        columns.isSortedDesc ? (\n                          <>\n                          <BsArrowDown className=\"arrow-down\" />\n                          <BsArrowUp />\n                          </>\n                        ) : (\n                          <>\n                          <BsArrowDown />\n                          <BsArrowUp className=\"arrow-down\" />\n                          </>\n                        )\n                      ) : (\n                        <>\n                          <BsArrowUp />\n                          <BsArrowDown />\n                        </>\n                      ))}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"category-table-body\">\n            {data.length !== 0 ? (\n              page.map((row,index) => {\n                prepareRow(row);\n                return (\n                  <tr className=\"th-table\" {...row.getRowProps()} key={index}>\n                    {row.cells.map((cell, index) => {\n                      return (\n                        <th className=\"th-table-data\" {...cell.getCellProps()} key={index}>{cell.render(\"Cell\")}</th>\n                      );\n                    })}\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan={columns.length}> No record found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {data?.length > 10 ? (\n        <div className=\"pagination-button\">\n          <button onClick={() => gotoPage(0)} disabled={pageIndex === 0}>\n          {'<<'}\n        </button>{' '}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n           {'<'}\n          </button>\n          <strong className=\"me-2\">\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{\" \"}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </button>\n          <button\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={pageIndex === pageCount - 1}\n        >\n          {'>>'}\n        </button>{' '}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default ReactTable;\n"],"names":["dispatch","useDispatch","useSelector","state","manager","confirmMessage","deleteId","closeModal","closeConfirmMessage","setDeleteId","alignment","visible","className","onClick","color","type","deleteManager","managerList","isLoader","useEffect","getManagerList","navigate","useNavigate","columns","useMemo","Header","accessor","d","user","first_name","last_name","status","charAt","toUpperCase","slice","disableSortBy","id","setToggleStausUpdate","toggleUpdateButtonFalse","DisabledFieldtrue","title","openConfirmMessage","Spinner","toggleUpdateButtonTrue","setToggleStausSubmit","ReactTable","data","sub_admins","users","searchField","tableInstance","useTable","autoResetPage","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","pageCount","length","window","scrollTo","top","left","behavior","map","index","getHeaderGroupProps","key","headers","render","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","colSpan","disabled"],"sourceRoot":""}