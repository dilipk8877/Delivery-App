{"version":3,"file":"static/js/5656.7eb7ef9d.chunk.js","mappings":"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","sources":["dispatcherPanel/views/agent/agent/Active.js","views/ReactTable/ReactTable.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { CCard, CContainer } from \"@coreui/react\";\nimport { CgUnblock } from \"react-icons/cg\";\nimport ReactTable from \"src/views/ReactTable/ReactTable\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAgents,\n  getChangeState,\n  openAssignDriverModel,\n  openConfirmationModal,\n  setCurrentAgentPage,\n  setCurrentSTs,\n  setDeleteId,\n  setDriverId,\n} from \"src/features/agents/AgentSlice\";\nconst Active = () => {\n  const agent = useSelector((state) => state.agent.agentList);\n  const dispacth = useDispatch();\n  useEffect(() => {\n    dispacth(getAgents(\"isActive=1\"));\n    dispacth(setCurrentSTs(\"isActive=1\"));\n    dispacth(setCurrentAgentPage(\"active\"))\n  }, []);\n\n  const handleBlock = (id) => {\n    dispacth(\n      getChangeState({ status: \"blockAgents\", id, currentStatus: \"isActive=1\" })\n    );\n  };\n  const handleDelete = (id) => {\n    dispacth(setDeleteId(id));\n    dispacth(openConfirmationModal());\n  };\n\n  const handleAssignDriver = (id) => {\n    dispacth(setDriverId(id));\n    dispacth(openAssignDriverModel());\n  };\n  \n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.user.first_name} {d.user.last_name}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Type\",\n        // accessor: \"type\",\n        accessor:d=>{\n          return(\n            <span>{d.type == null ? \"--\" : d.type}</span>\n          )\n        }\n      },\n      {\n        Header: \"Team Name\",\n        accessor:d=>{\n          return(\n            <span>{d.teamName == null ? \"--\" : d.teamName}</span>\n          )\n        }\n      },\n      {\n        Header: \"Cash Collected\",\n        accessor: \"cash_collected\",\n      },\n      {\n        Header: \"Order Earning\",\n        accessor: \"walletBalance\",\n      },\n      {\n        Header: \"Action\",\n        disableSortBy: true,\n        accessor: (d) => {\n          return (\n            <CContainer className=\"d-flex justify-content-start align-items-center ps-0 gap-2\">\n              <FaEdit\n                className=\"cursor\"\n                title=\"Assign Team\"\n                onClick={() => handleAssignDriver(d.user.id)}\n              />\n              <FaTrash\n                className=\"cursor\"\n                title=\"Delete Agent\"\n                onClick={() => handleDelete(d.user.id)}\n              />\n              <CgUnblock\n                title=\"Block\"\n                className=\"fs-5 text-danger cursor\"\n                onClick={() => handleBlock(d.user.id)}\n              />\n            </CContainer>\n          );\n        },\n      },\n    ],\n    []\n  );\n  return (\n    <CCard>\n      <ReactTable data={agent?.agents || []} columns={columns} />\n    </CCard>\n  );\n};\n\nexport default Active;\n","import React, { useEffect } from \"react\";\nimport {\n  useSortBy,\n  useTable,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { BsArrowDown, BsArrowUp } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\n\nconst ReactTable = ({ data, columns }) => {\n  const {searchField} = useSelector((state)=>state.users)\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      autoResetPage: false,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    pageCount,\n    state: { pageIndex, pageSize },\n  } = tableInstance;\n\n  useEffect(()=>{\n    gotoPage(0)\n  },[searchField])\n\n  useEffect(()=>{\n    if(data?.length % 10 ===0){\n      previousPage()\n    }\n  },[data])\n\n  useEffect(() => {\n    window.scrollTo({top: 0, left: 0, behavior: 'instant'});\n  }, [pageIndex]);\n  \n  return (\n    <>\n      <div>\n        <table {...getTableProps()} className=\"category-table\">\n          <thead className=\"category-table-head\">\n            {headerGroups.map((headerGroups, index) => (\n              <tr {...headerGroups.getHeaderGroupProps()} key={index}>\n                {headerGroups.headers.map((columns,index) => (\n                  <th key={index}>\n                    {columns.render(\"Header\")}\n                    <span {...columns.getHeaderProps(columns.getSortByToggleProps())}>\n                    {!columns.disableSortBy &&\n                      (columns.isSorted ? (\n                        columns.isSortedDesc ? (\n                          <>\n                          <BsArrowDown className=\"arrow-down\" />\n                          <BsArrowUp />\n                          </>\n                        ) : (\n                          <>\n                          <BsArrowDown />\n                          <BsArrowUp className=\"arrow-down\" />\n                          </>\n                        )\n                      ) : (\n                        <>\n                          <BsArrowUp />\n                          <BsArrowDown />\n                        </>\n                      ))}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"category-table-body\">\n            {data.length !== 0 ? (\n              page.map((row,index) => {\n                prepareRow(row);\n                return (\n                  <tr className=\"th-table\" {...row.getRowProps()} key={index}>\n                    {row.cells.map((cell, index) => {\n                      return (\n                        <th className=\"th-table-data\" {...cell.getCellProps()} key={index}>{cell.render(\"Cell\")}</th>\n                      );\n                    })}\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan={columns.length}> No record found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {data?.length > 10 ? (\n        <div className=\"pagination-button\">\n          <button onClick={() => gotoPage(0)} disabled={pageIndex === 0}>\n          {'<<'}\n        </button>{' '}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n           {'<'}\n          </button>\n          <strong className=\"me-2\">\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{\" \"}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </button>\n          <button\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={pageIndex === pageCount - 1}\n        >\n          {'>>'}\n        </button>{' '}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default ReactTable;\n"],"names":["agent","useSelector","state","agentList","dispacth","useDispatch","useEffect","getAgents","setCurrentSTs","setCurrentAgentPage","columns","useMemo","Header","accessor","d","user","first_name","last_name","type","teamName","disableSortBy","className","title","onClick","id","setDriverId","openAssignDriverModel","setDeleteId","openConfirmationModal","getChangeState","status","currentStatus","data","agents","users","searchField","tableInstance","useTable","autoResetPage","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","pageCount","length","window","scrollTo","top","left","behavior","map","index","getHeaderGroupProps","key","headers","render","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","colSpan","disabled"],"sourceRoot":""}