{"version":3,"file":"static/js/9016.978044b4.chunk.js","mappings":"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","sources":["dispatcherPanel/views/Payout/payout/Pending.js","views/ReactTable/ReactTable.js"],"sourcesContent":["import { CButton, CCard } from \"@coreui/react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPayout } from \"src/features/payout/PayoutSlice\";\nimport ReactTable from \"src/views/ReactTable/ReactTable\";\n\nconst Pending = () => {\n  const payout = useSelector((state) => state.payout.payoutList);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPayout(\"0\"));\n  }, []);\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Date\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.requestedBy === null ? \"--\" : <span>{d.requestedBy}</span>}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Agent\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.requestedBy === \"\" ? \"--\" : <span>{d.agentName}</span>}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Amount\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.requestedBy === null ? \"--\" : <span>{d.amount}</span>}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Payout Type\",\n        accessor: (d) => {\n          return (\n            <span>\n              {d.requestedBy === \"\" ? \"--\" : <span>{d.payoutType}</span>}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Bank Details\",\n        disableSortBy: true,\n        accessor: (d) => {\n          return (\n            <span>\n              {d.requestedBy === null ? \"--\" : <span>{d.bankDetails}</span>}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"Action\",\n        disableSortBy: true,\n        accessor: (user) => {\n          return (\n            <>\n            <CButton color=\"info\" className=\"text-white\">Payout</CButton>\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <CCard>\n      {true && (\n        <ReactTable data={payout?.detailsPayout || []} columns={columns} />\n      )}\n    </CCard>\n  );\n};\n\nexport default Pending;\n","import React, { useEffect } from \"react\";\nimport {\n  useSortBy,\n  useTable,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { BsArrowDown, BsArrowUp } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\n\nconst ReactTable = ({ data, columns }) => {\n  const {searchField} = useSelector((state)=>state.users)\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      autoResetPage: false,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    pageCount,\n    state: { pageIndex, pageSize },\n  } = tableInstance;\n\n  useEffect(()=>{\n    gotoPage(0)\n  },[searchField])\n\n  useEffect(()=>{\n    if(data?.length % 10 ===0){\n      previousPage()\n    }\n  },[data])\n\n  useEffect(() => {\n    window.scrollTo({top: 0, left: 0, behavior: 'instant'});\n  }, [pageIndex]);\n  \n  return (\n    <>\n      <div>\n        <table {...getTableProps()} className=\"category-table\">\n          <thead className=\"category-table-head\">\n            {headerGroups.map((headerGroups, index) => (\n              <tr {...headerGroups.getHeaderGroupProps()} key={index}>\n                {headerGroups.headers.map((columns,index) => (\n                  <th key={index}>\n                    {columns.render(\"Header\")}\n                    <span {...columns.getHeaderProps(columns.getSortByToggleProps())}>\n                    {!columns.disableSortBy &&\n                      (columns.isSorted ? (\n                        columns.isSortedDesc ? (\n                          <>\n                          <BsArrowDown className=\"arrow-down\" />\n                          <BsArrowUp />\n                          </>\n                        ) : (\n                          <>\n                          <BsArrowDown />\n                          <BsArrowUp className=\"arrow-down\" />\n                          </>\n                        )\n                      ) : (\n                        <>\n                          <BsArrowUp />\n                          <BsArrowDown />\n                        </>\n                      ))}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"category-table-body\">\n            {data.length !== 0 ? (\n              page.map((row,index) => {\n                prepareRow(row);\n                return (\n                  <tr className=\"th-table\" {...row.getRowProps()} key={index}>\n                    {row.cells.map((cell, index) => {\n                      return (\n                        <th className=\"th-table-data\" {...cell.getCellProps()} key={index}>{cell.render(\"Cell\")}</th>\n                      );\n                    })}\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan={columns.length}> No record found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {data?.length > 10 ? (\n        <div className=\"pagination-button\">\n          <button onClick={() => gotoPage(0)} disabled={pageIndex === 0}>\n          {'<<'}\n        </button>{' '}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n           {'<'}\n          </button>\n          <strong className=\"me-2\">\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{\" \"}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </button>\n          <button\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={pageIndex === pageCount - 1}\n        >\n          {'>>'}\n        </button>{' '}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default ReactTable;\n"],"names":["payout","useSelector","state","payoutList","dispatch","useDispatch","useEffect","getPayout","columns","useMemo","Header","accessor","d","requestedBy","agentName","amount","payoutType","disableSortBy","bankDetails","user","color","className","data","detailsPayout","users","searchField","tableInstance","useTable","autoResetPage","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","pageCount","length","window","scrollTo","top","left","behavior","map","index","getHeaderGroupProps","key","headers","render","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","colSpan","onClick","disabled"],"sourceRoot":""}